<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright The WildFly Authors
  ~ SPDX-License-Identifier: Apache-2.0
  -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.wildfly</groupId>
        <artifactId>mvc-krazo-parent</artifactId>
        <!--
        Maintain separation between the artifact id and the version to help prevent
        merge conflicts between commits changing the GA and those changing the V.
        -->
        <version>1.0.0.Beta1-SNAPSHOT</version>
        <relativePath>../../pom.xml</relativePath>
    </parent>

    <artifactId>mvc-krazo-tck-runner</artifactId>
    <packaging>jar</packaging>

    <name>WildFly Jakarta MVC with Krazo -- TCK Runner</name>
    <description>WildFly TCK Runner for Jakarta MVC integration</description>

    <properties>

        <!-- Feature pack to use for provisioning the base server -->
        <testsuite.galleon.pack.groupId>org.wildfly</testsuite.galleon.pack.groupId>
        <testsuite.galleon.pack.artifactId>wildfly-galleon-pack</testsuite.galleon.pack.artifactId>
        <testsuite.galleon.pack.version>${version.org.wildfly.test}</testsuite.galleon.pack.version>

        <version.org.jboss.arquillian>1.7.1.Final</version.org.jboss.arquillian>
        <version.org.wildfly.arquillian>5.0.1.Final</version.org.wildfly.arquillian>

        <surefire.memory.args>-Xmx512m -XX:MetaspaceSize=128m</surefire.memory.args>
        <surefire.jpda.args>-agentlib:jdwp=transport=dt_socket,address=*:${as.debug.port},server=y,suspend=y</surefire.jpda.args>
        <as.debug.port>8787</as.debug.port>
        <surefire.system.args>${surefire.memory.args}</surefire.system.args>
        <jboss.home>${project.build.directory}/wildfly-layers</jboss.home>
        <server.jvm.args>${surefire.memory.args}</server.jvm.args>

    </properties>

    <dependencyManagement>
        <dependencies>
            <!-- Import the arquillian bom before the mvc-tck one, as it declares an old version of the arq bom -->
            <dependency>
                <groupId>org.jboss.arquillian</groupId>
                <artifactId>arquillian-bom</artifactId>
                <version>${version.org.jboss.arquillian}</version>
                <scope>import</scope>
                <type>pom</type>
            </dependency>
            <dependency>
                <groupId>jakarta.mvc.tck</groupId>
                <artifactId>mvc-tck-bom</artifactId>
                <version>${version.jakarta.mvc}</version>
                <scope>import</scope>
                <type>pom</type>
            </dependency>

            <dependency>
                <groupId>org.wildfly.arquillian</groupId>
                <artifactId>wildfly-arquillian-container-managed</artifactId>
                <version>${version.org.wildfly.arquillian}</version>
                <scope>test</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>

        <!-- Client side use of Jakarta EE -->
        <dependency>
            <groupId>jakarta.platform</groupId>
            <artifactId>jakarta.jakartaee-web-api</artifactId>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>jakarta.mvc.tck</groupId>
            <artifactId>mvc-tck-api</artifactId>
        </dependency>

        <dependency>
            <groupId>jakarta.mvc.tck</groupId>
            <artifactId>mvc-tck-tests</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.wildfly.arquillian</groupId>
            <artifactId>wildfly-arquillian-container-managed</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.jboss.shrinkwrap.resolver</groupId>
            <artifactId>shrinkwrap-resolver-depchain</artifactId>
            <scope>compile</scope>
            <type>pom</type>
        </dependency>

    </dependencies>

    <build>
        <plugins>

            <!-- Provision traditional unzipped server installations -->
            <plugin>
                <groupId>org.wildfly.plugins</groupId>
                <artifactId>wildfly-maven-plugin</artifactId>
                <configuration>
                    <log-provisioning-time>${galleon.log.time}</log-provisioning-time>
                    <offline-provisioning>${galleon.offline}</offline-provisioning>
                    <record-provisioning-state>true</record-provisioning-state>
                    <galleon-options>
                        <jboss-fork-embedded>${galleon.fork.embedded}</jboss-fork-embedded>
                    </galleon-options>
                </configuration>
                <executions>
                    <!-- Provision a full installation -->
                    <!--<execution>
                        <id>default-provisioning</id>
                        <goals>
                            <goal>provision</goal>
                        </goals>
                        <phase>compile</phase>
                        <configuration>
                            <provisioning-dir>${project.build.directory}/wildfly-complete</provisioning-dir>
                            <feature-packs>
                                <feature-pack>
                                    <location>${testsuite.galleon.pack.groupId}:${testsuite.galleon.pack.artifactId}:${testsuite.galleon.pack.version}</location>
                                    <included-packages>
                                        <name>docs.examples.configs</name>
                                    </included-packages>
                                </feature-pack>
                                <feature-pack>
                                    <location>${project.groupId}:wildfly-mvc-krazo-feature-pack:${project.version}</location>
                                </feature-pack>
                            </feature-packs>
                        </configuration>
                    </execution>-->
                    <!-- Provision a server using layers -->
                    <execution>
                        <id>layers-provisioning</id>
                        <goals>
                            <goal>provision</goal>
                        </goals>
                        <phase>compile</phase>
                        <configuration>
                            <galleon-options combine.children="append">
                                <optional-packages>passive+</optional-packages>
                            </galleon-options>
                            <provisioning-dir>${project.build.directory}/wildfly-layers</provisioning-dir>
                            <feature-packs>
                                <feature-pack>
                                    <location>${testsuite.galleon.pack.groupId}:${testsuite.galleon.pack.artifactId}:${testsuite.galleon.pack.version}</location>
                                    <inherit-configs>false</inherit-configs>
                                    <inherit-packages>false</inherit-packages>
                                </feature-pack>
                                <feature-pack>
                                    <location>${project.groupId}:wildfly-mvc-krazo-feature-pack:${project.version}</location>
                                </feature-pack>
                            </feature-packs>
                            <layers>
                                <layer>core-server</layer>
                                <layer>jsf</layer> <!-- TCK wars need jakarta.faces.webapp.FacesServlet for some reason -->
                                <layer>mvc-krazo</layer>
                            </layers>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <dependenciesToScan>jakarta.mvc.tck:mvc-tck-tests</dependenciesToScan>
                    <systemProperties>
                        <arquillian.launch>wildfly</arquillian.launch>
                        <ee.jakarta.tck.mvc.api.BaseArchiveProvider>
                            org.wildfly.extension.mvc.krazo.tck.WildFlyArchiveProvider
                        </ee.jakarta.tck.mvc.api.BaseArchiveProvider>
                        <jboss.home>${jboss.home}</jboss.home>
                        <server.jvm.args>${server.jvm.args}</server.jvm.args>
                    </systemProperties>
                    <argLine>${surefire.system.args}</argLine>
                </configuration>
                <executions>
                    <execution>
                        <id>default-test</id>
                        <phase>none</phase>
                    </execution>
                    <!--<execution>
                        <id>wildfly-complete</id>
                        <goals>
                            <goal>test</goal>
                        </goals>
                        <phase>test</phase>
                        <configuration>
                            <environmentVariables>
                                <JBOSS_HOME>${project.build.directory}/wildfly-complete</JBOSS_HOME>
                            </environmentVariables>
                        </configuration>
                    </execution>-->
                    <execution>
                        <id>wildfly-layers</id>
                        <goals>
                            <goal>test</goal>
                        </goals>
                        <phase>test</phase>
<!--                        <configuration>-->
<!--                            <environmentVariables>-->
<!--                                <JBOSS_HOME>${project.build.directory}/wildfly-layers</JBOSS_HOME>-->
<!--                            </environmentVariables>-->
<!--                        </configuration>-->
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <profiles>

        <!--
          Debugging profiles.
        -->
        <profile>
            <id>debug.profile</id>
            <activation><property><name>debug</name></property></activation>
            <properties>
                <server.jvm.args>${surefire.memory.args} ${surefire.jpda.args}</server.jvm.args>
            </properties>
        </profile>
        <profile>
            <id>debug.client.profile</id>
            <activation><property><name>debug-client</name></property></activation>
            <properties>
                <surefire.system.args>${surefire.memory.args} ${surefire.jpda.args}</surefire.system.args>
            </properties>
        </profile>
    </profiles>

</project>
